# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: opochuev <opochuev@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/02/20 17:18:46 by opochuev          #+#    #+#              #
#    Updated: 2024/02/27 13:53:45 by opochuev         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

NAME = libftprintf.a

OBJ_DIR = ./obj/
#the variable is for after when I compile they go to this folder#

SRC = ft_printf.c ft_digits.c ft_chars.c ft_hex.c
#includes the functions for the library #

OBJS = $(addprefix $(OBJ_DIR), $(SRC:.c=.o))
#everything that convert c to o, add ./obj/ this is lists#
# This changes all files from .c to .o #
# o are the objects files generatig in the list #

DEPS = $(addsuffix .d, $(basename $(OBJS)))
# file dependencia #
# basename takes list o files & delete .o #
# addsuffix add .d to each file #
MK = mkdir -p
# flag parents create all directories /release/obj#
# if dir already exists just skip without errors#

CFLAGS	= -Wall -Wextra -Werror

INCLUDE = -I ./
#we have headers .h files in same dir #

RM	= rm -rf
#r delete all files and dir recursivo #
#f force #

CC	= gcc
#compile#
# -------------------- Rules --------------------
$(OBJ_DIR)%.o: %.c Makefile 	
	@echo "Compiling... $<"
	@$(MK) $(dir $@)
	@$(CC) $(CFLAGS) -MMD $(INCLUDE) -c $< -o $@
#compare .c with .o, if Makefile is updated#
#The symbol '@' prints the instruсtion on the screen#
#'@' before command blocked printing the command#
#This is  where everything copiles.
#This is a rule (:), on the left is the target and the right is the dependencies#
#The conversion of .c to .o is done in the file libft.h #
# -c means compilation #
# -o means output #
# the $< is 1st dependencia en rule o:c  - ft.c#
# the $@ is target name of this rule ./obj/ft.o#
#For creating o files we need .c and .h files#
#MMD is Makefile Dependency Minus headrs#
#MMD creating .d files with info dependency what .c from what .h#
#if .h was changed make checked what .c files were depending from this .h#

all: $(NAME)
#This is where the program starts #

$(NAME): $(OBJS)
	@echo "Creating... $@"
	ar rcs $(NAME) $(OBJS)
#Generating the Lib a.out#
#Creating static library from object files which are already compiled#
#For creating Lib we need o files#
# c is high level, then .o creates it to binary... #

-include $(DEPS)
#we include .d files (generated by MMD) in makefile#
#for understanding if we need recompilacion .o if .h was changed#

# -------------------- Clean -------------------- #
clean:
	$(RM) $(OBJ_DIR)
# this removes files (.o)#
fclean:	clean
	$(RM) $(NAME)
# cleans f - force clean. (lib.a) #
re:	fclean $(NAME)

.PHONY:	all clean fclean re